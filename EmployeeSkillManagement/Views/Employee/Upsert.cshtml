@model EmployeeSkillManagement.Models.ViewModels.UpsertEmployeeViewModel

@{
    if(Model.EmployeeId==0){
        <h4 class="p-2">Create New Employee</h4>
    }else{
        <h4 class="p-2">Update Employee's Details</h4>
    }
}

@{
    var message = TempData["ErrorMessage"] as string;
}

<div>
    <p class="text-danger">@message</p>
</div>
<div class="p-4 shadow-sm rounded mt-2 bg-white">

<form class="row" method="post" asp-controller="Employee" asp-action="Upsert">
    <input hidden asp-for="EmployeeId" value="@Model.EmployeeId">
  <div class="form-group col-sm-6 col-md-5 mb-4">
    <label asp-for="FirstName"></label>
    <input asp-for="FirstName" class="form-control" placeholder="Enter ">
    <span asp-validation-for="FirstName"></span>
  </div>
  <div class="form-group col-sm-6 col-md-5 mb-4">
    <label asp-for="LastName"></label>
    <input asp-for="LastName" class="form-control" placeholder="Enter ">
    <span asp-validation-for="LastName"></span>
  </div>
  <div class="form-group col-sm-6 col-md-5 mb-4">
    <label asp-for="DesignationId"></label>
    <select asp-for="DesignationId" asp-items="@Model.DesignationOptions" value="@Model.DesignationId" class="form-select">
        <option value="">Select Designation</option>
    </select>
    <span asp-validation-for="DesignationId"></span>
  </div>
  <div class="form-group col-sm-6 col-md-5 mb-4">
    <label asp-for="Email"></label>
    <input asp-for="Email" class="form-control" placeholder="Enter ">
    <span asp-validation-for="Email"></span>
  </div>
  <div class="form-group col-sm-6 col-md-5 mb-4">
    <label asp-for="DateOfJoining"></label>
    @{
        var dateValue = Model.DateOfJoining != default(DateOnly)
            ? Model.DateOfJoining.ToString("yyyy-MM-dd")
            : null;
    }
    <input asp-for="DateOfJoining" class="form-control" type="date" placeholder="Enter" value="@dateValue">
    <span asp-validation-for="DateOfJoining"></span>
  </div>

    <div class="form-group">
        <label>Add Skills</label>
        <div class="col-sm-12 col-md-10 d-flex justify-content-between flex-wrap">
            
            <div class="col-12 col-sm-4 mb-3">
                <select id="SelectedSkillIds" name="SelectedSkillIds" class="form-select" >
                    <option value="0" selected>Select Skill</option>

                    @foreach (var skill in Model.SkillOptions)
                    {
                        <option value="@skill.Value">@skill.Text</option>
                    }

                </select>
            </div>
            <div class="col-12 col-sm-4 mb-3">
                <select id="levelSelect" class="form-select">
                    <option value="0" selected>Select Proficiency</option>
                    @for(int i = 1; i<=10;i++){
                        <option value="@i">@i</option>
                    }
                    
                </select>
            </div>

            <div class="col-6 col-sm-3 mb-2">
                <button id="addSkill" class="btn btn-info  bg-gradient  w-100">Add</button>
            </div>
        </div>
                <span asp-validation-for="EmployeeSkillsAndLevels"></span>
        <div id="skill-form-error" class="text-danger"></div>
        <div id="skillsContainer" class="d-flex gap-4 flex-wrap col-sm-11 mt-1">
            @for (int index = 0; index < Model.EmployeeSkillsAndLevels.Count; index++)
            {
                var skill = Model.EmployeeSkillsAndLevels[index];
                <div class="skill-level d-flex justify-content-around align-items-center border border-primary rounded col-3">
                    @($"{skill.SkillName} Level-{skill.SkillLevel}")
                    <div class="btn remove-skill"> 
                        <i class="bi bi-x-circle btn-outline-danger rounded-circle"></i>
                    </div>
                    <input type="hidden" value="@skill.SkillId" name="EmployeeSkillsAndLevels[@index].SkillId">
                    <input type="hidden" value="@skill.SkillName" name="EmployeeSkillsAndLevels[@index].SkillName">
                    <input type="hidden" value="@skill.SkillLevel" name="EmployeeSkillsAndLevels[@index].SkillLevel">
                </div>
            }
        </div>
    </div>

    <div class="from-group col-sm-5 mt-3">
        @{
            if(Model.EmployeeId==0){
                <button type="submit" class="btn btn-primary bg-gradient col-sm-6">Save</button>
            }else{
                <button type="submit" class="btn btn-primary bg-gradient col-sm-6">Update</button>
            }
        }
    </div>

    <div asp-validation-summary="All" class="text-danger"></div>

</form>
</div>
