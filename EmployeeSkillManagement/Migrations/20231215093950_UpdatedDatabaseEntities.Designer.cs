// <auto-generated />
using System;
using EmployeeSkillManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeSkillManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231215093950_UpdatedDatabaseEntities")]
    partial class UpdatedDatabaseEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("EmployeeSkillManagement.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("EmployeeSkillManagement.Models.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Designations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DesignationName = "CEO"
                        },
                        new
                        {
                            Id = 2,
                            DesignationName = "CTO"
                        },
                        new
                        {
                            Id = 3,
                            DesignationName = "CIO/Chief Digital Officer/Chief Innovation Officer"
                        },
                        new
                        {
                            Id = 4,
                            DesignationName = "VP of Product Management/Head of Product"
                        },
                        new
                        {
                            Id = 5,
                            DesignationName = "Product Manager"
                        },
                        new
                        {
                            Id = 6,
                            DesignationName = "VP of Marketing"
                        },
                        new
                        {
                            Id = 7,
                            DesignationName = "VP of Engineering/Director of Engineering"
                        },
                        new
                        {
                            Id = 8,
                            DesignationName = "Chief Architect"
                        },
                        new
                        {
                            Id = 9,
                            DesignationName = "Software Architect"
                        },
                        new
                        {
                            Id = 10,
                            DesignationName = "Engineering Project Manager/Engineering Manager"
                        },
                        new
                        {
                            Id = 11,
                            DesignationName = "Technical Lead/Engineering Lead/Team Lead"
                        },
                        new
                        {
                            Id = 12,
                            DesignationName = "Principal Software Engineer"
                        },
                        new
                        {
                            Id = 13,
                            DesignationName = "Senior Software Engineer/Senior Software Developer"
                        },
                        new
                        {
                            Id = 14,
                            DesignationName = "Software Engineer"
                        },
                        new
                        {
                            Id = 15,
                            DesignationName = "Software Developer"
                        },
                        new
                        {
                            Id = 16,
                            DesignationName = "Junior Software Developer"
                        },
                        new
                        {
                            Id = 17,
                            DesignationName = "Intern Software Developer"
                        });
                });

            modelBuilder.Entity("EmployeeSkillManagement.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateOfJoining")
                        .HasColumnType("TEXT");

                    b.Property<int>("DesignationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeSkillManagement.Models.EmployeeSkillAndLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SkillId");

                    b.ToTable("EmployeeSkillAndLevels");
                });

            modelBuilder.Entity("EmployeeSkillManagement.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("EmployeeSkillManagement.Models.Employee", b =>
                {
                    b.HasOne("EmployeeSkillManagement.Models.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designation");
                });

            modelBuilder.Entity("EmployeeSkillManagement.Models.EmployeeSkillAndLevel", b =>
                {
                    b.HasOne("EmployeeSkillManagement.Models.Employee", null)
                        .WithMany("EmployeeSkillsAndLevels")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("EmployeeSkillManagement.Models.Skill", null)
                        .WithMany("EmployeeSkillAndLevels")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeSkillManagement.Models.Employee", b =>
                {
                    b.Navigation("EmployeeSkillsAndLevels");
                });

            modelBuilder.Entity("EmployeeSkillManagement.Models.Skill", b =>
                {
                    b.Navigation("EmployeeSkillAndLevels");
                });
#pragma warning restore 612, 618
        }
    }
}
